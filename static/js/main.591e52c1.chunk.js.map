{"version":3,"sources":["components/Sliders/index.tsx","components/Header/index.tsx","components/ArrayItem/index.tsx","components/ArrayContainer/index.tsx","utils/swap.ts","utils/generate.ts","algorithms/mergeSort.ts","algorithms/quickSort.ts","components/App/App.tsx","algorithms/bubbleSort.ts","algorithms/selectionSorts.ts","algorithms/insertionSort.ts","reportWebVitals.ts","index.tsx"],"names":["Sliders","isRunning","handleSpeedChange","handleSizeChange","className","Slider","disabled","defaultValue","step","min","max","onChange","valueLabelDisplay","Header","handleStart","handleStop","algorithm","setAlgorithm","useState","open","setOpen","IconButton","onClick","Select","value","e","target","MenuItem","Button","variant","fontSize","ArrayItem","isSelected","height","width","margin","speed","textSize","style","transitionDuration","bottom","computeSizes","arrayLength","fullSize","Math","window","innerWidth","ArrayContainer","array","selected","setWidth","length","sizes","setSizes","useEffect","addEventListener","updateWidth","useCallback","useMemo","size","console","log","map","index","includes","swap","i","j","randomArray","Array","from","_","sort","random","mSort","left","right","animations","mid","floor","res","push","first","second","isSwap","takeLeft","override","merge","mergeSort","arrayInput","qSort","low","high","pivot","partition","App","setIsRunning","arraySize","setArraySize","setArray","setSelected","setSpeed","nextIterationTimeout","useRef","loop","newArray","current","setTimeout","to","swapped","bubbleSort","inputArray","selectionSort","key","insertionSort","quickSort","clearTimeout","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591e52c1.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./Sliders.css\";\r\n\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nexport type SliderChange =\r\n  | ((event: React.ChangeEvent<{}>, value: number | number[]) => void)\r\n  | undefined;\r\n\r\ninterface Props {\r\n  isRunning: boolean;\r\n  handleSpeedChange: SliderChange;\r\n  handleSizeChange: SliderChange;\r\n}\r\n\r\nconst Sliders: FC<Props> = ({\r\n  isRunning,\r\n  handleSpeedChange,\r\n  handleSizeChange,\r\n}) => {\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"sliders__container\">\r\n        <p>Speed:</p>\r\n        <div className=\"sliders__wrapper\">\r\n          <Slider\r\n            disabled={isRunning}\r\n            defaultValue={50}\r\n            step={1}\r\n            min={1}\r\n            max={100}\r\n            onChange={handleSpeedChange}\r\n            valueLabelDisplay=\"auto\"\r\n            className=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sliders__container\">\r\n        <p>Size:</p>\r\n        <div className=\"sliders__wrapper\">\r\n          <Slider\r\n            disabled={isRunning}\r\n            defaultValue={25}\r\n            step={1}\r\n            min={1}\r\n            max={100}\r\n            onChange={handleSizeChange}\r\n            valueLabelDisplay=\"auto\"\r\n            className=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sliders;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Algorithm } from \"../App/App\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { IconButton, MenuItem } from \"@material-ui/core\";\r\nimport Sliders, { SliderChange } from \"../Sliders\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\ninterface Props {\r\n  isRunning: boolean;\r\n  handleStart: React.MouseEventHandler<HTMLButtonElement>;\r\n  handleStop: React.MouseEventHandler<HTMLButtonElement>;\r\n  algorithm: Algorithm;\r\n  setAlgorithm: React.Dispatch<React.SetStateAction<Algorithm>>;\r\n  handleSizeChange: SliderChange;\r\n  handleSpeedChange: SliderChange;\r\n}\r\n\r\nconst Header: FC<Props> = ({\r\n  isRunning,\r\n  handleStart,\r\n  handleStop,\r\n  algorithm,\r\n  setAlgorithm,\r\n  handleSizeChange,\r\n  handleSpeedChange,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleAlgoChange = (e: React.ChangeEvent<any>) => {\r\n    setAlgorithm(e.target.value);\r\n  };\r\n\r\n  const openMenu = () => setOpen(true);\r\n  const closeMenu = () => setOpen(false);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo-container\">\r\n        <EqualizerIcon className=\"header__algo-icon\" />\r\n        <h1 className=\"header__title\">\r\n          Algorithm\r\n          <br /> Visualizer\r\n        </h1>\r\n      </div>\r\n      <form\r\n        className={`header__actions ${open ? \"header__actions--visible\" : \"\"}`}\r\n      >\r\n        <div className=\"header__menu-heading\">\r\n          <span className=\"header__menu-title\">Menu</span>\r\n          <IconButton onClick={closeMenu} className=\"header__menu-button\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Select\r\n          value={algorithm}\r\n          onChange={handleAlgoChange}\r\n          className=\"header__algo-selection\"\r\n          disabled={isRunning}\r\n        >\r\n          <MenuItem value={\"bubble\"}>BubbleSort</MenuItem>\r\n          <MenuItem value={\"insertion\"}>InsertionSort</MenuItem>\r\n          <MenuItem value={\"selection\"}>SelectionSort</MenuItem>\r\n          <MenuItem value={\"merge\"}>MergeSort</MenuItem>\r\n          <MenuItem value={\"quick\"}>QuickSort</MenuItem>\r\n        </Select>\r\n\r\n        <Sliders\r\n          isRunning={isRunning}\r\n          handleSizeChange={handleSizeChange}\r\n          handleSpeedChange={handleSpeedChange}\r\n        />\r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={isRunning ? handleStop : handleStart}\r\n          className=\"header__start-button\"\r\n        >\r\n          {isRunning ? \"Stop\" : \"Start\"}\r\n        </Button>\r\n      </form>\r\n      <IconButton onClick={openMenu} className=\"header__menu-button\">\r\n        <MenuIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from \"react\";\r\nimport \"./ArrayItem.css\";\r\n\r\ninterface Props {\r\n  value: number;\r\n  height: number;\r\n  isSelected: boolean;\r\n  width: number;\r\n  margin: number;\r\n  speed: number;\r\n  textSize: number;\r\n}\r\n\r\nconst ArrayItem: FC<Props> = ({\r\n  value,\r\n  isSelected,\r\n  height,\r\n  width,\r\n  margin,\r\n  speed,\r\n  textSize,\r\n}) => {\r\n  const className = isSelected ? \"array-item--selected\" : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`array-item ${className}`}\r\n      style={{\r\n        width,\r\n        margin: `0 ${margin / 2}px`,\r\n        height: `${height}%`,\r\n        transitionDuration: `${speed}ms`,\r\n      }}\r\n    >\r\n      <span\r\n        className=\"array-item__text\"\r\n        style={{ fontSize: `${textSize}px`, bottom: `-${textSize + 10}px` }}\r\n      >\r\n        {value}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayItem;\r\n","import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport \"./ArrayContainer.css\";\r\n\r\nimport ArrayItem from \"../ArrayItem\";\r\n\r\ninterface Props {\r\n  array: number[];\r\n  selected: number[];\r\n  speed: number;\r\n}\r\n\r\nconst computeSizes = (arrayLength: number) => {\r\n  const fullSize = Math.max((window.innerWidth - 50) / arrayLength, 3);\r\n  const width = fullSize * 0.75;\r\n  const margin = fullSize * 0.25;\r\n  return { width, margin };\r\n};\r\n\r\nconst ArrayContainer: FC<Props> = ({ array, selected, speed }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [sizes, setSizes] = useState(() => computeSizes(array.length));\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n  }, []);\r\n\r\n  const updateWidth = useCallback(() => {\r\n    setSizes(computeSizes(array.length));\r\n  }, [array.length]);\r\n\r\n  useEffect(() => {\r\n    updateWidth();\r\n  }, [width, updateWidth]);\r\n\r\n  const textSize = useMemo(() => {\r\n    const size = Math.min(sizes.width * 0.75, 35);\r\n    console.log(size);\r\n    return size >= 8 ? size : 0;\r\n  }, [sizes.width]);\r\n\r\n  return (\r\n    <div className=\"array-container\">\r\n      {array.map((value, index) => (\r\n        <ArrayItem\r\n          speed={speed}\r\n          textSize={textSize}\r\n          height={(100 / array.length) * value}\r\n          width={sizes.width}\r\n          margin={sizes.margin}\r\n          value={value}\r\n          key={index}\r\n          isSelected={selected.includes(index)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayContainer;\r\n","export const swap = <T>(array: T[], i: number, j: number) => {\r\n  [array[i], array[j]] = [array[j], array[i]];\r\n};\r\n","export const randomArray = (length: number) =>\r\n  Array.from({ length })\r\n    .map((_, i) => i + 1)\r\n    .sort(() => Math.random() - 0.5);\r\n","import { Anim } from \"../components/App/App\";\r\n\r\nconst merge = (\r\n  array: number[],\r\n  left: number,\r\n  mid: number,\r\n  right: number,\r\n  animations: Anim[]\r\n) => {\r\n  let res = [];\r\n  let [i, j] = [left, mid + 1];\r\n\r\n  while (i <= mid && j <= right) {\r\n    animations.push({ first: i, second: j, isSwap: false });\r\n    const takeLeft = array[i] <= array[j];\r\n    res.push(takeLeft ? array[i++] : array[j++]);\r\n  }\r\n  while (i <= mid) {\r\n    animations.push({ first: i, second: i, isSwap: false });\r\n    res.push(array[i++]);\r\n  }\r\n  while (j <= right) {\r\n    animations.push({ first: j, second: j, isSwap: false });\r\n    res.push(array[j++]);\r\n  }\r\n  for (let index = left; index <= right; index++) {\r\n    const value = res[index - left];\r\n    animations.push({\r\n      first: index,\r\n      second: index,\r\n      isSwap: false,\r\n      override: { index, value },\r\n    });\r\n    array[index] = value;\r\n  }\r\n};\r\n\r\nconst mSort = (\r\n  array: number[],\r\n  left: number,\r\n  right: number,\r\n  animations: Anim[]\r\n) => {\r\n  if (left >= right) return;\r\n\r\n  const mid = Math.floor((left + right) / 2);\r\n\r\n  mSort(array, left, mid, animations);\r\n  mSort(array, mid + 1, right, animations);\r\n  merge(array, left, mid, right, animations);\r\n};\r\n\r\nexport const mergeSort = (arrayInput: number[]): Anim[] => {\r\n  const array = [...arrayInput];\r\n  const animations: Anim[] = [];\r\n\r\n  mSort(array, 0, array.length - 1, animations);\r\n\r\n  return animations;\r\n};\r\n","import { Anim } from \"../components/App/App\";\r\nimport { swap } from \"../utils/swap\";\r\n\r\nconst partition = (\r\n  array: number[],\r\n  low: number,\r\n  high: number,\r\n  animations: Anim[]\r\n) => {\r\n  const pivot = array[low];\r\n  let [i, j] = [low, high];\r\n\r\n  while (i < j) {\r\n    while (array[i] <= pivot) {\r\n      animations.push({ first: i, second: j, isSwap: false });\r\n      i++;\r\n    }\r\n\r\n    while (array[j] > pivot) {\r\n      animations.push({ first: i, second: j, isSwap: false });\r\n      j--;\r\n    }\r\n\r\n    if (i < j) {\r\n      animations.push({ first: i, second: j, isSwap: true });\r\n      swap(array, i, j);\r\n    }\r\n  }\r\n  animations.push({ first: low, second: j, isSwap: true });\r\n  swap(array, low, j);\r\n  return j;\r\n};\r\n\r\nconst qSort = (\r\n  array: number[],\r\n  low: number,\r\n  high: number,\r\n  animations: Anim[]\r\n) => {\r\n  if (low >= high) {\r\n    return;\r\n  }\r\n  const j = partition(array, low, high, animations);\r\n  qSort(array, low, j - 1, animations);\r\n  qSort(array, j + 1, high, animations);\r\n};\r\n\r\nexport const quickSort = (arrayInput: number[]): Anim[] => {\r\n  const array = [...arrayInput];\r\n  const animations: Anim[] = [];\r\n  qSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n};\r\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\n/** COMPONENTS */\nimport Header from \"../Header\";\nimport ArrayContainer from \"../ArrayContainer\";\n\n/** UTILITIES */\nimport { swap } from \"../../utils/swap\";\nimport { randomArray } from \"../../utils/generate\";\n\n/** ALGORITHMS */\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\nimport { selectionSort } from \"../../algorithms/selectionSorts\";\nimport { insertionSort } from \"../../algorithms/insertionSort\";\nimport { mergeSort } from \"../../algorithms/mergeSort\";\nimport { quickSort } from \"../../algorithms/quickSort\";\n\nexport interface Anim {\n  first: number;\n  second: number;\n  isSwap: boolean;\n  override?: { index: number; value: number };\n}\n\nexport type Algorithm =\n  | \"bubble\"\n  | \"selection\"\n  | \"insertion\"\n  | \"merge\"\n  | \"quick\";\n\nconst App: FC = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [arraySize, setArraySize] = useState(25);\n  const [array, setArray] = useState(randomArray(arraySize));\n  const [selected, setSelected] = useState<number[]>([]);\n  const [speed, setSpeed] = useState(50);\n  const [algorithm, setAlgorithm] = useState<Algorithm>(\"bubble\");\n  const nextIterationTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    setArray(randomArray(arraySize));\n  }, [arraySize]);\n\n  const loop = (animations: Anim[], index: number) => {\n    if (index >= animations.length) {\n      setSelected([]);\n      setIsRunning(false);\n      return;\n    }\n\n    const { isSwap, first, second, override } = animations[index];\n\n    setSelected([first, second]);\n\n    if (isSwap) {\n      setArray((array) => {\n        const newArray = [...array];\n        swap(newArray, first, second);\n        return newArray;\n      });\n    }\n\n    if (override) {\n      setArray((array) => {\n        const newArray = [...array];\n        const { index, value } = override;\n        newArray[index] = value;\n        return newArray;\n      });\n    }\n\n    nextIterationTimeout.current = setTimeout(\n      () => loop(animations, index + 1),\n      speed\n    );\n  };\n\n  const handleStart = () => {\n    setIsRunning(true);\n    const animations =\n      algorithm === \"bubble\"\n        ? bubbleSort(array)\n        : algorithm === \"selection\"\n        ? selectionSort(array)\n        : algorithm === \"insertion\"\n        ? insertionSort(array)\n        : algorithm === \"merge\"\n        ? mergeSort(array)\n        : quickSort(array);\n    loop(animations, 0);\n  };\n\n  const handleStop = () => {\n    if (nextIterationTimeout.current) {\n      clearTimeout(nextIterationTimeout.current);\n      setIsRunning(false);\n      setSelected([]);\n    }\n  };\n\n  useEffect(() => {}, [isRunning]);\n\n  const handleSizeChange = (\n    event: React.ChangeEvent<{}>,\n    value: number | number[]\n  ) => {\n    setArraySize(value as number);\n  };\n\n  const handleSpeedChange = (\n    event: React.ChangeEvent<{}>,\n    value: number | number[]\n  ) => {\n    const inverted = 101 - (value as number);\n    const speed = inverted * 5;\n    setSpeed(speed);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header\n        isRunning={isRunning}\n        handleStart={handleStart}\n        handleStop={handleStop}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n        handleSizeChange={handleSizeChange}\n        handleSpeedChange={handleSpeedChange}\n      />\n      <ArrayContainer array={array} selected={selected} speed={speed} />\n    </div>\n  );\n};\n\nexport default App;\n","import { Anim } from \"../components/App/App\";\r\nimport { swap } from \"../utils/swap\";\r\n\r\nexport const bubbleSort = (arrayInput: number[]): Anim[] => {\r\n  const array = [...arrayInput];\r\n  const animations: Anim[] = [];\r\n  let to = array.length;\r\n  while (true) {\r\n    let swapped = false;\r\n    for (let i = 1; i < to; i++) {\r\n      animations.push({ first: i - 1, second: i, isSwap: false });\r\n      if (array[i - 1] > array[i]) {\r\n        swap(array, i - 1, i);\r\n        animations.push({ first: i - 1, second: i, isSwap: true });\r\n        swapped = true;\r\n      }\r\n    }\r\n    to--;\r\n    if (!swapped) {\r\n      return animations;\r\n    }\r\n  }\r\n};\r\n","import { Anim } from \"../components/App/App\";\r\nimport { swap } from \"../utils/swap\";\r\n\r\nexport const selectionSort = (inputArray: number[]) => {\r\n  const array = [...inputArray];\r\n  const animations: Anim[] = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    let min = i;\r\n    for (let j = i; j < array.length; j++) {\r\n      animations.push({ first: i, second: j, isSwap: false });\r\n      if (array[min] > array[j]) {\r\n        min = j;\r\n      }\r\n    }\r\n    animations.push({ first: min, second: i, isSwap: true });\r\n    swap(array, min, i);\r\n  }\r\n  return animations;\r\n};\r\n","import { Anim } from \"../components/App/App\";\r\n\r\nexport const insertionSort = (arrayInput: number[]): Anim[] => {\r\n  const array = [...arrayInput];\r\n  const animations: Anim[] = [];\r\n  let i, key, j;\r\n  for (i = 1; i < array.length; i++) {\r\n    key = array[i];\r\n    j = i - 1;\r\n    animations.push({ first: j, second: i, isSwap: false });\r\n    while (j >= 0 && array[j] > key) {\r\n      animations.push({ first: j, second: j + 1, isSwap: false });\r\n      animations.push({ first: j, second: j + 1, isSwap: true });\r\n      array[j + 1] = array[j];\r\n      j = j - 1;\r\n    }\r\n    array[j + 1] = key;\r\n  }\r\n  return animations;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}